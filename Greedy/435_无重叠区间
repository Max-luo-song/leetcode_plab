/*
 *  算法思想：本题属于贪心算法中的区间问题，寻找移除的最小数量。对于移除的问题，不采用删除的方法。通过统计的方式取代。
 *            区间比较容易统计的是不重合的数量，但也要有左右的标准。
 *            本题采用的是总区间数-不重合区间数 = 移除区间数
 *            统计不重合区间的方法：对右边界进行排序，寻找左边界大于当前右边界标准的加一
*/
class Solution {
public:
    static bool cmp(vector<int>& a, vector<int>& b) {
        return a[1] < b[1];
    }
    int eraseOverlapIntervals(vector<vector<int>>& intervals) {
        if (intervals.size() == 0 || intervals.size() == 1)
            return 0;
        sort(intervals.begin(), intervals.end(), cmp);
        int end = intervals[0][1];
        int count = 1;
        for (int i=1; i<intervals.size(); i++) {
            if (intervals[i][0] >= end) {
                count++;
                end = intervals[i][1];
            }
        }
        return intervals.size()-count;
    }
};
