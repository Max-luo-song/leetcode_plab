/*
 *  算法思想：寻找两和等于指定数字，令一个不动。从剩下的寻找target-a的存在。
            本题还要求返回数字位置，是两个关键值得匹配，使用map，而不是set
*/
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        std::unordered_map <int,int> map;
        for(int i = 0; i < nums.size(); i++) {
            auto iter = map.find(target - nums[i]); // find的返回值不是单个int，不可做为int，用auto即可
            if(iter != map.end()) {
                return {iter->second, i};
            }
            map.insert(make_pair(nums[i], i));       // map中insert直接不可以，需要使用make_pair合并
        }
        return {};
    }
};
