/*
 *  算法思想：本题统计节点个数，就是遍历树求个数。实现方式包括递归方式和非递归方式（先序遍历）
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
/*class Solution {
public:
    int countNodes(TreeNode* root) {
        if (root == NULL)
            return 0;
        TreeNode *p = root;
        stack<TreeNode *> stack1;
        int num = 0;
        while (!stack1.empty() || p != NULL) {
            if (p != NULL) {
                stack1.push(p);
                num++;
                p = p->left;
            }
            else {
                p = stack1.top();
                stack1.pop();
                p = p->right;
            }
        }
        return num;
    }
};*/
class Solution {
public:
    int countNodes(TreeNode* root) {
        int num = 0; // 换一种方式就是if (root == NULL) return 0;
        if (root != NULL) {
            num++;
            num += countNodes(root->left);
            num += countNodes(root->right);
        }
        return num;
    }
};
