/*
 *  算法思想：二叉树的深度递归实现。
 *           对于非递归可以利用层次遍历的层数，实现
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int Depth(TreeNode* root) {
        if (root == NULL)
            return 0;
        int maxleft = 1;
        int maxright = 1;
        maxleft += Depth(root->left);
        maxright += Depth(root->right);
        return max(maxleft,maxright);
    }
    int maxDepth(TreeNode* root) {
        int max;
        max = Depth(root);
        return max;
    }
};
