/*
 *      算法思想：前序遍历的递归实现，注意递归中一定要在root不等于NULL中完成
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void preorder(TreeNode *root, vector<int> &ending) {
        if (root != NULL) {
            ending.push_back(root->val);
            preorder(root->left, ending);
            preorder(root->right, ending);
        }
    }
    vector<int> preorderTraversal(TreeNode* root) {
        vector <int> ending;
        if (root == NULL)
            return ending;
        preorder(root, ending);
        return ending;
    }
};
